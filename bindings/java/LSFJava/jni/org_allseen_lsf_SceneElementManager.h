/******************************************************************************
 *  * 
 *    Copyright (c) 2016 Open Connectivity Foundation and AllJoyn Open
 *    Source Project Contributors and others.
 *    
 *    All rights reserved. This program and the accompanying materials are
 *    made available under the terms of the Apache License, Version 2.0
 *    which accompanies this distribution, and is available at
 *    http://www.apache.org/licenses/LICENSE-2.0

 *
 ******************************************************************************/
/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_allseen_lsf_SceneElementManager */

#ifndef _Included_org_allseen_lsf_SceneElementManager
#define _Included_org_allseen_lsf_SceneElementManager
#ifdef __cplusplus
extern "C" {
#endif
#undef org_allseen_lsf_SceneElementManager_MAX_SCENE_ELEMENTS
#define org_allseen_lsf_SceneElementManager_MAX_SCENE_ELEMENTS 100L
/*
 * Class:     org_allseen_lsf_SceneElementManager
 * Method:    getAllSceneElementIDs
 * Signature: ()Lorg/allseen/lsf/sdk/ControllerClientStatus;
 */
JNIEXPORT jobject JNICALL Java_org_allseen_lsf_SceneElementManager_getAllSceneElementIDs
  (JNIEnv *, jobject);

/*
 * Class:     org_allseen_lsf_SceneElementManager
 * Method:    getSceneElementName
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Lorg/allseen/lsf/sdk/ControllerClientStatus;
 */
JNIEXPORT jobject JNICALL Java_org_allseen_lsf_SceneElementManager_getSceneElementName
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     org_allseen_lsf_SceneElementManager
 * Method:    setSceneElementName
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/allseen/lsf/sdk/ControllerClientStatus;
 */
JNIEXPORT jobject JNICALL Java_org_allseen_lsf_SceneElementManager_setSceneElementName
  (JNIEnv *, jobject, jstring, jstring, jstring);

/*
 * Class:     org_allseen_lsf_SceneElementManager
 * Method:    createSceneElement
 * Signature: (Lorg/allseen/lsf/sdk/TrackingID;Lorg/allseen/lsf/SceneElement;Ljava/lang/String;Ljava/lang/String;)Lorg/allseen/lsf/sdk/ControllerClientStatus;
 */
JNIEXPORT jobject JNICALL Java_org_allseen_lsf_SceneElementManager_createSceneElement
  (JNIEnv *, jobject, jobject, jobject, jstring, jstring);

/*
 * Class:     org_allseen_lsf_SceneElementManager
 * Method:    updateSceneElement
 * Signature: (Ljava/lang/String;Lorg/allseen/lsf/SceneElement;)Lorg/allseen/lsf/sdk/ControllerClientStatus;
 */
JNIEXPORT jobject JNICALL Java_org_allseen_lsf_SceneElementManager_updateSceneElement
  (JNIEnv *, jobject, jstring, jobject);

/*
 * Class:     org_allseen_lsf_SceneElementManager
 * Method:    deleteSceneElement
 * Signature: (Ljava/lang/String;)Lorg/allseen/lsf/sdk/ControllerClientStatus;
 */
JNIEXPORT jobject JNICALL Java_org_allseen_lsf_SceneElementManager_deleteSceneElement
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_allseen_lsf_SceneElementManager
 * Method:    getSceneElement
 * Signature: (Ljava/lang/String;)Lorg/allseen/lsf/sdk/ControllerClientStatus;
 */
JNIEXPORT jobject JNICALL Java_org_allseen_lsf_SceneElementManager_getSceneElement
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_allseen_lsf_SceneElementManager
 * Method:    applySceneElement
 * Signature: (Ljava/lang/String;)Lorg/allseen/lsf/sdk/ControllerClientStatus;
 */
JNIEXPORT jobject JNICALL Java_org_allseen_lsf_SceneElementManager_applySceneElement
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_allseen_lsf_SceneElementManager
 * Method:    getSceneElementDataSet
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Lorg/allseen/lsf/sdk/ControllerClientStatus;
 */
JNIEXPORT jobject JNICALL Java_org_allseen_lsf_SceneElementManager_getSceneElementDataSet
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     org_allseen_lsf_SceneElementManager
 * Method:    createNativeObject
 * Signature: (Lorg/allseen/lsf/ControllerClient;Lorg/allseen/lsf/SceneElementManagerCallback;)V
 */
JNIEXPORT void JNICALL Java_org_allseen_lsf_SceneElementManager_createNativeObject
  (JNIEnv *, jobject, jobject, jobject);

/*
 * Class:     org_allseen_lsf_SceneElementManager
 * Method:    destroyNativeObject
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_org_allseen_lsf_SceneElementManager_destroyNativeObject
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif